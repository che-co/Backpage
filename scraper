#!/bin/bash  
#  Author: Sergio "Checo" Gonzales
#  Date: 07-11-2016
#  This can be used to scrape the backpage.com
CATEGORY="$1,"
DATE=`date +%d-%m-%Y`
PAGE=1
#  Test for valid params and necessary directories.
#  If directories do not exist, create them.

if [ -z "$1" ]; then
 echo "Error: Posting category or categories not given without defulat"
 echo "Usage: $0 [category,category,...] [geography] [geography] ..."
 exit 1
fi

if [ -z "$2" ]; then
 echo "Error: Geography or georgraphies not given without default"
 echo "Usage: $0 [category,category,...] [geography] [geography] ..."
 exit 1 
fi

#  Select geographies.. not sure how to implement this yet

#  Scrape topics
until [ -z "$2" ]; do
	SPATH=./URLS/sponsored/"$2"
	NSPATH=./URLS/non-sponsored/"$2"
	PPATH=./.pages/"$2"/"$DATE"

	if [ 0 -eq 0 ]; then
		echo $2
	fi

	if [ ! -d "$NSPATH" ]; then
		mkdir -p "$NSPATH"
	fi

	if [ ! -d "$SPATH" ]; then
		mkdir -p "$SPATH"
	fi
	if [ ! -d "$PPATH" ]; then
		mkdir -p "$PPATH"
	fi
#  Download URLS and check remove URLS previously downloaded
#  Still need to implement for subsequent pages
	for X in `eval echo {$CATEGORY}`; do
		PAGE=1
		if [ 0 -eq 0 ]; then
			echo -e "\t $X"
		fi
		 
		until [ "$PAGE" -gt 444 ]; do
			FNAME="$2"_"$X"_"$DATE"
   
			curl -s "$2".backpage.com/"$X"/"&page=$PAGE" > "$PPATH"/"$FNAME"_pg"$PAGE".html
   #  Test to see if the posting pages has ended and there are "No more matches."
			grep -q "<div><b>No matches found.</b><br><br></div>" "$PPATH"/"$FNAME"_pg"$PAGE".html
			if [ $? -eq 0 ]; then
				echo -e "\t No more posting at page: $PAGE."
				break
			fi
   #  Find every posting and sponsord URLs on currnet page
			grep -v "sponsorBoxPlusImages" "$PPATH"/"$FNAME"_pg"$PAGE".html | grep -o /"$X"/[a-z\-]*/[0-9]* | sort | uniq > "$NSPATH"/"$FNAME"_temp.txt
			grep "sponsorBoxPlusImages" "$PPATH"/"$FNAME"_pg"$PAGE".html | grep -o /"$X"/[a-z\-]*/[0-9]* | sort | uniq > "$SPATH"/"$FNAME"_ads_temp.txt

     			if [ `ls -1 "$NSPATH" | wc -l` -le 1 ]; then 
       				mv "$NSPATH"/"$FNAME"_temp.txt "$NSPATH"/"$FNAME".txt
     			else
       				sort -u `ls -d  "$NSPATH"/* | grep "$X"` > "$NSPATH"/"$FNAME".txt
       				rm "$NSPATH"/"$FNAME"_temp.txt
     			fi
			if [ `ls -1 "$SPATH" | wc -l` -le 1 ]; then
				mv "$SPATH"/"$FNAME"_ads_temp.txt "$SPATH"/"$FNAME"_sponsored.txt
			else
				sort -u `ls -d "$SPATH"/* | grep "$X"` > "$SPATH"/"$FNAME"_sponsored.txt
    				rm "$SPATH"/"$FNAME"_ads_temp.txt
			fi
			
    			((PAGE+=1))
		done 
	done
	shift
done

#  Record ads that are paid advertisment and remove duplicates
#+ from other URL lists


#  Download and organize content


exit $?
